version: "3"
services:
  be:
    env_file:
      - ./be/.env
    restart: always
    build:
      context: ./be/
      target: dev
    ports:
      - 3100:3000
    depends_on:
      - postgres
      - redis
    volumes:
    - ./be:/usr/src/app
    - ./volumes/shots:/usr/src/app/public/shots

  ui:
    build:
      context: ./ui/.
      target: dev
      dockerfile: 'Dockerfile'
    ports:
      - 3180:80
      - 3101:3000
    volumes:
      - ./ui:/frontend


  build-client-api:
    image: openapitools/openapi-generator-cli
    volumes:
      - ./ui/src:/target
    command: ["generate", "-i", "http://be:3000/documentation-json", '-g', 'javascript', '-o', '/target']

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      TZ: 'GMT'
      PGTZ: 'GMT'
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/data/postgres:/data/postgres
    env_file:
      - ./be/.env

  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
    - postgres
    ports:
      - "8080:80"
    volumes:
      - ./volumes/data/pgadmin:/root/.pgadmin
    env_file:
      - ./be/.env


  mosquitto:
    image: ansi/mosquitto
    restart: unless-stopped
    ports:
      - 1883:1883
    entrypoint: /usr/local/sbin/mosquitto -c /etc/mosquitto/mosquitto.conf
    volumes:
      - ./volumes/etc/mosquitto:/etc/mosquitto:ro
      - ./volumes/var/log/mosquitto:/var/log/mosquitto:rw
      - ./volumes/var/lib/mosquitto/mosquitto.db:/var/lib/mosquitto/mosquitto.db:rw
    environment:
      - TZ=America/Montreal
